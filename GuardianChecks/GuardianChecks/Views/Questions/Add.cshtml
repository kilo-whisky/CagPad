@model GuardianChecks.Models.Questions

@{
	ViewBag.Title = "Add";
}

<h2>Add</h2>
<hr />

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	@Html.ValidationSummary(true, "", new { @class = "text-danger" })

	<div class="form-group">
		@Html.LabelFor(model => model.Question, htmlAttributes: new { @class = "control-label" })
		@Html.EditorFor(model => model.Question, new { htmlAttributes = new { @class = "form-control" } })
		@Html.ValidationMessageFor(model => model.Question, "", new { @class = "text-danger" })
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label" })
		<select class="form-control" name="Type">
			<option value="" disabled selected>Select a question type</option>
			<option value="C">Cabinet</option>
			<option value="D">Defibrillator</option>
			<option value="T">Training</option>
		</select>
		@Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label" })
		<br />
		@Html.CheckBoxFor(model => model.Active)
		@Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.QuestionOrder, htmlAttributes: new { @class = "control-label" })
		@Html.EditorFor(model => model.QuestionOrder, new { htmlAttributes = new { @class = "form-control" } })
		@Html.ValidationMessageFor(model => model.QuestionOrder, "", new { @class = "text-danger" })
	</div>

	<div class="form-group">
		<input type="submit" value="Create" class="btn btn-default" />
		<a href="@Url.Action("Index", "Questions")" class="btn btn-default">Cancel</a>
	</div>
}
